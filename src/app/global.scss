@font-face {
  font-family: 'Roboto';
  font-style: normal;
  font-weight: 400;
  src: url('roboto-fontface/fonts/Roboto-Regular.eot');
  src: local('Roboto Regular'),
  local('Roboto-Regular'),
  url('roboto-fontface/fonts/Roboto-Regular.eot?#iefix') format('embedded-opentype'),
  url('roboto-fontface/fonts/Roboto-Regular.woff2') format('woff2'),
  url('roboto-fontface/fonts/Roboto-Regular.woff') format('woff'),
  url('roboto-fontface/fonts/Roboto-Regular.ttf') format('truetype'),
  url('roboto-fontface/fonts/Roboto-Regular.svg#Roboto') format('svg');
}

@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url('material-design-icons/iconfont/MaterialIcons-Regular.eot');
  src: local('Material Icons'),
  local('MaterialIcons-Regular'),
  url(material-design-icons/iconfont/MaterialIcons-Regular.woff2) format('woff2'),
  url(material-design-icons/iconfont/MaterialIcons-Regular.woff) format('woff'),
  url(material-design-icons/iconfont/MaterialIcons-Regular.ttf) format('truetype');
}

:global {
  html, body {
    -webkit-user-select: none;
    height: 100%;
    overflow: hidden;
  }
  
  #root, .rootContainer {
    height: 100%;
  }

  .material-icons {
    font-family: 'Material Icons';
    font-weight: normal;
    font-style: normal;
    font-size: 16px;
    line-height: 1;
    letter-spacing: normal;
    text-transform: none;
    display: inline-block;
    white-space: nowrap;
    word-wrap: normal;
    direction: ltr;
    -webkit-font-feature-settings: 'liga';
    -webkit-font-smoothing: antialiased;
  }

  // Virtual Scroll
  .Grid {
    position: relative;
    overflow: auto;
    outline: 0;
    -webkit-overflow-scrolling: touch;
  }
  
  .Grid__innerScrollContainer {
    box-sizing: border-box;
    overflow: hidden;
  }
  
  .Grid__cell {
    position: absolute;
  }
  
  .VirtualScroll {
    position: relative;
    overflow-y: auto;
    overflow-x: hidden;
    outline: 0;
    -webkit-overflow-scrolling: touch;
  }
  
  .VirtualScroll__innerScrollContainer {
    box-sizing: border-box;
    overflow: hidden;
  }
  
  .VirtualScroll__row {
    position: absolute;
  }
  
  // react-redux-toastr
  .confirm-holder {
    width: 100%;
    height: 100%;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 2;
    display: none;

    &.active {
      display: block;
    }

    .shadow {
      width: 100%;
      height: 100%;
      opacity: .5;
      background-color: #333;
    }

    .confirm {
      width: 320px;
      background-color: white;
      position: absolute;
      z-index: 9;
      top: 20%;
      left: 50%;
      margin-left: -160px;
      box-shadow: 3px 3px 20px #333;
      border-radius: 2px;
      overflow: hidden;

      .message {
        width: 98%;
        padding: 10px 1%;
        min-height: 50px;
        font-size: 1em;
        background-color: white;
        text-align: center;
        font-family: 'open-sanscondensed-light', sans-serif;
        clear: both;
      }

      button {
        width: 50%;
        height: 50px;
        text-transform: capitalize;
        border: none;
        background-color: transparent;
        padding: 0;
        margin: 0;
        position: relative;
        z-index: 1;
        float: left;
        border-top: 1px solid #f0f0f0;
        font-size: 14px;
        overflow: hidden;

        p {
          position: relative;
          z-index: 1;
          line-height: 100%;
          padding: 0;
          margin: 0;
          color: #555;
        }

        &:before {
          content: '';
          width: 40px;
          height: 40px;
          position: absolute;
          top: 0;
          left: 50%;
          margin-left: -20px;
          background-color: #999;
          border-radius: 50%;
          z-index: 0;
          opacity: .2;
          transform: scale(0);
        }

        // In order to avoid event bubbling put the transition on the active class
        &.active {
          &:before {
            transition: transform .25s ease-in-out;
            transform: scale(2);
          }
        }

        &:focus {
          outline: none;
        }

        &:hover {
          cursor: pointer;
          background-color: #f5f5f5;
        }
      }
    }
  }

  .animated {
    animation-duration: 1s;
    animation-fill-mode: both;

    &.bounceIn {
      animation-duration: .7s;
    }

    &.bounceOut {
      animation-duration: .5s;
    }

    &.bounceIn {
      animation-name: bounceIn;
    }

    &.bounceOut {
      animation-name: bounceOut;
    }

    &.fadeIn {
      animation-name: fadeIn;
      animation-duration: .7s;
    }

    &.fadeOut {
      animation-name: fadeOut;
      animation-duration: .3s;
    }

    &.bounceInDown {
      animation-name: bounceInDown;
    }

    &.bounceOutUp {
      animation-name: bounceOutUp;
    }
  }
}

// Animations
@keyframes :global(bounceIn) {
  from, 20%, 40%, 60%, 80%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }

  20% {
    transform: scale3d(1.1, 1.1, 1.1);
  }

  40% {
    transform: scale3d(.9, .9, .9);
  }

  60% {
    opacity: 1;
    transform: scale3d(1.03, 1.03, 1.03);
  }

  80% {
    transform: scale3d(.97, .97, .97);
  }

  to {
    opacity: 1;
    transform: scale3d(1, 1, 1);
  }
}

@keyframes :global(bounceOut) {
  20% {
    transform: scale3d(.9, .9, .9);
  }

  50%, 55% {
    opacity: 1;
    transform: scale3d(1.1, 1.1, 1.1);
  }

  to {
    opacity: 0;
    transform: scale3d(.3, .3, .3);
  }
}

@keyframes :global(fadeIn) {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes :global(fadeOut) {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes :global(bounceInDown) {
  from, 60%, 75%, 90%, to {
    animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);
  }

  0% {
    opacity: 0;
    transform: translate3d(0, -3000px, 0);
  }

  60% {
    opacity: 1;
    transform: translate3d(0, 25px, 0);
  }

  75% {
    transform: translate3d(0, -10px, 0);
  }

  90% {
    transform: translate3d(0, 5px, 0);
  }

  to {
    -webkit-transform: none;
    transform: none;
  }
}

@keyframes :global(bounceOutUp) {
  20% {
    transform: translate3d(0, -10px, 0);
  }

  40%, 45% {
    opacity: 1;
    transform: translate3d(0, 20px, 0);
  }

  to {
    opacity: 0;
    transform: translate3d(0, -2000px, 0);
  }
}
